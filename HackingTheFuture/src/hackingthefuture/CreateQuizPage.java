/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hackingthefuture;

import java.awt.Dimension;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.io.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

/**
 *
 * @author Asus
 */
public class CreateQuizPage extends javax.swing.JFrame {

    Connection con = null;
    PreparedStatement pst = null;
    PreparedStatement psCheckUserExists = null;
    ResultSet resultSet = null;

    private String title;
    private String description;
    private String theme;
    private String content;
     private String email;
    public String username;
    private String role;
    private String locationCoordinate;
    private int numberOfQuizzes;

    /**
     * Creates new form EventPage
     */
    public CreateQuizPage() {
        initComponents();
        setPreferredSize(new Dimension(900, 600));
        setResizable(true);
    }
    public String getUsername(){
        return username;
    }
     public void setUsername(String username) {
        this.username = username;
        takeInformation(); // Retrieve user information
    }
    public CreateQuizPage(String username) {
        initComponents();
        setPreferredSize(new Dimension(900, 600));
        setResizable(true);
        this.username = username;  // Set the username
        takeInformation(); // Retrieve user information
    }
    
    
    private void takeInformation() {
    System.out.println("take information");
    try {
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hackingthefuture", "root", "");
        System.out.println("Database connection successful.");

        String querySD = "SELECT * FROM `user` WHERE `username` = ?";
        pst = con.prepareStatement(querySD);
        pst.setString(1, username); // Set the username parameter at index 1

        System.out.println("SQL Query: " + querySD); // Print SQL query for debugging
        System.out.println("Username: " + username); // Print username for debugging

        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            System.out.println("ResultSet contains data.");
            this.email = rs.getString("email");
            this.role = rs.getString("role");
            this.locationCoordinate = rs.getString("LocationCoordinate");
        } else {
            System.out.println("ResultSet is empty.");
        }

        con.close();
    } catch (SQLException e) {
        e.printStackTrace(); // Print stack trace for debugging
        System.err.println("Error executing SQL query: " + e.getMessage());
    }
    
    // Add a print statement to check the value of locationCoordinate
    System.out.println("Location Coordinate: " + locationCoordinate);

    System.out.println("Email: " + email);
    System.out.println(username);
    System.out.println(role);
    System.out.println(locationCoordinate);
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        quizDescription = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        quizTheme = new javax.swing.JTextField();
        quizContent = new javax.swing.JTextField();
        createQuizButton = new javax.swing.JButton();
        quizTitle = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 550));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Ink Free", 1, 52)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Create ");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(60, 190, 180, 60);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(650, 550));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 153, 153));
        jLabel3.setText("Quiz Title");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 153, 153));
        jLabel4.setText("Quiz Description");

        quizDescription.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        quizDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizDescriptionActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 153, 153));
        jLabel5.setText("Quiz Theme(Science/Technology/Engineering/Mathematics)");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 153, 153));
        jLabel6.setText("Quiz content(Quizizz Link)");

        quizTheme.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        quizTheme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizThemeActionPerformed(evt);
            }
        });

        quizContent.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        quizContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizContentActionPerformed(evt);
            }
        });

        createQuizButton.setBackground(new java.awt.Color(255, 153, 153));
        createQuizButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        createQuizButton.setText("Create");
        createQuizButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createQuizButtonActionPerformed(evt);
            }
        });

        quizTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        quizTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizTitleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(quizDescription)
                    .addComponent(quizTheme)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quizTitle)
                    .addComponent(quizContent))
                .addContainerGap(129, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createQuizButton)
                .addGap(98, 98, 98))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quizTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quizDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quizTheme, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(quizContent, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(createQuizButton)
                .addGap(51, 51, 51))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(270, 0, 669, 564);

        jLabel2.setFont(new java.awt.Font("Ink Free", 1, 52)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Quiz");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(80, 260, 149, 63);

        backButton.setBackground(new java.awt.Color(255, 153, 153));
        backButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backButton);
        backButton.setBounds(15, 6, 72, 27);

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\kekyi\\Downloads\\HackingTheFuture\\HackingTheFuture\\src\\hackingthefuture\\Image\\back2.jpg")); // NOI18N
        jLabel8.setText("jLabel8");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(0, 0, 270, 570);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quizTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quizTitleActionPerformed

    private void quizDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quizDescriptionActionPerformed

    private void quizThemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizThemeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quizThemeActionPerformed

    private void quizContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizContentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quizContentActionPerformed

    private void createQuizButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createQuizButtonActionPerformed

         System.out.println("happy");
        
        title = quizTitle.getText();
        description = quizDescription.getText();
        theme = quizTheme.getText();
        content = quizContent.getText();

        // Optionally, you can print the data to verify it's captured correctly
        System.out.println("Quiz Title: " + title);
        System.out.println("Quiz Description: " + description);
        System.out.println("Quiz Theme: " + theme);
        System.out.println("Quiz content: " + content);

        if (title.isEmpty() || description.isEmpty() || theme.isEmpty() || content.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all the blanks.");
            return;
        }
        
        if (!isValidQuizTheme(theme)) {
            return;
        }

        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hackingthefuture", "root", "");

            // Check if the event already exists based on title, description, venue, date, and time
            String query = "SELECT * FROM `quiz` WHERE `quiz title` = ? AND `quiz description` = ? AND `quiz theme` = ? AND `quiz content` = ?";
            pst = con.prepareStatement(query);
            pst.setString(1, title);
            pst.setString(2, description);
            pst.setString(3, theme);
            pst.setString(4, content);
            ResultSet resultSet = pst.executeQuery();

            if (resultSet.next()) {
                // Event already exists
                JOptionPane.showMessageDialog(null, "QUIZ ALREADY EXISTS");
            } else {
                // Event does not exist, insert it into the database
                String insertQuery = "INSERT INTO `quiz`(`quiz title`, `quiz description`, `quiz theme`, `quiz content`) VALUES (?,?,?,?)";
                pst = con.prepareStatement(insertQuery);
                pst.setString(1, title);
                pst.setString(2, description);
                pst.setString(3, theme);
                pst.setString(4, content);
                pst.executeUpdate();

                JOptionPane.showMessageDialog(null, "QUIZ SAVED SUCCESSFULLY");
                addNumberOfQuizzes();
                this.dispose();
                MainPageEducator MainPageEducatorsFrame = new MainPageEducator(getUsername());
                MainPageEducatorsFrame.setVisible(true);
                MainPageEducatorsFrame.pack();
                MainPageEducatorsFrame.setLocationRelativeTo(null);
                // Optionally, you can hide the current frame here if needed
                // this.setVisible(false);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }


    }//GEN-LAST:event_createQuizButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        MainPageEducator EduFrame = new MainPageEducator();
        EduFrame.setUsername(username);
        EduFrame.setVisible(true);
        EduFrame.pack();
        EduFrame.setLocationRelativeTo(null);
    }//GEN-LAST:event_backButtonActionPerformed
    
    private void addNumberOfQuizzes() {

        System.out.println("take information");
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hackingthefuture", "root", "");
            System.out.println("Database connection successful.");

            String querySD = "SELECT * FROM `user` WHERE `username` = ?";
            pst = con.prepareStatement(querySD);
            pst.setString(1, username); // Set the username parameter at index 1

            System.out.println("SQL Query: " + querySD); // Print SQL query for debugging
            System.out.println("Username: " + username); // Print username for debugging

            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                System.out.println("ResultSet contains data.");
                this.email = rs.getString("email");
                this.numberOfQuizzes = rs.getInt("numberOfQuizzes");

                // Add the points to the existing points
                this.numberOfQuizzes += 1;

                // Update the database with the new points
                String updateQuery = "UPDATE `user` SET `numberOfQuizzes` = ? WHERE `username` = ?";
                pst = con.prepareStatement(updateQuery);
                pst.setInt(1, this.numberOfQuizzes);
                pst.setString(2, username);
                pst.executeUpdate();
                
            } else {
                System.out.println("ResultSet is empty.");
            }

            con.close();
        } catch (SQLException e) {
            e.printStackTrace(); // Print stack trace for debugging
            System.err.println("Error executing SQL query: " + e.getMessage());
        }

        System.out.println(username);
        System.out.println(numberOfQuizzes);
    }
    
    
    private boolean isValidQuizTheme(String theme) {
        // Define valid quiz themes
        String[] validThemes = {"Science", "Technology", "Engineering", "Mathematics"};

        // Check if the entered theme matches any valid theme
        for (String validTheme : validThemes) {
            if (validTheme.equalsIgnoreCase(theme)) {
                return true;
            }
        }

        return false;  // Theme is not valid
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateQuizPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateQuizPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateQuizPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateQuizPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                CreateQuizPage CreateQuizPageFrame = new CreateQuizPage();
                CreateQuizPageFrame.setVisible(true);
                CreateQuizPageFrame.pack();
                CreateQuizPageFrame.setLocationRelativeTo(null);
                CreateQuizPageFrame.takeInformation(); 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton createQuizButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField quizContent;
    private javax.swing.JTextField quizDescription;
    private javax.swing.JTextField quizTheme;
    private javax.swing.JTextField quizTitle;
    // End of variables declaration//GEN-END:variables
}
