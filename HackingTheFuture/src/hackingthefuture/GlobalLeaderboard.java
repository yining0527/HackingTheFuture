/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hackingthefuture;

import java.awt.Dimension;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yingying
 */
public class GlobalLeaderboard extends javax.swing.JFrame {
    Connection con = null;
    PreparedStatement pst = null;
    
    private String username;
    private int points;
    Timestamp pointLastUpdated;

    /**
     * Creates new form GlobalLeaderboard
     */
    public GlobalLeaderboard() {
        initComponents();
        setPreferredSize(new Dimension(900,600));
        setResizable(true);
        this.username = username;  // Set the username
    }
    
    public void setUsername(String transferUsername) {
        this.username = transferUsername;
        takeInformation();
    }
    
    public void takeInformation()
    {
        System.out.println("take points");
        List<GlobalLeaderboard> leaderboard = new ArrayList<>();
        
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hackingthefuture", "root", "");
            System.out.println("Database connection successful.");
            
            String querySD = "SELECT * FROM `user` WHERE `role` = 'children' ORDER BY points DESC, pointLastUpdated ASC";
            pst = con.prepareStatement(querySD);
            
            System.out.println("SQL Query for booking: " + querySD); // Print SQL query for debugging
            System.out.println("Username: " + username); // Print username for debugging
            
            ResultSet rs = pst.executeQuery();
            
            DefaultTableModel model = (DefaultTableModel) jTableLeaderboard.getModel();
            
            model.setColumnIdentifiers(new Object[]{"Username", "Current Points", "Points Last Updated"});
            
            model.setRowCount(0);
            
            while (rs.next()) {
                String usernames = rs.getString("username");
                points = rs.getInt("points");
                pointLastUpdated = rs.getTimestamp("pointLastUpdated");
                leaderboard.add(new GlobalLeaderboard());
                
                model.addRow(new Object[]{usernames, points, pointLastUpdated});
                
                // Display the data
                System.out.println(usernames + "\t" + points + "\t" + pointLastUpdated);
            }
            
            con.close();
        } catch (SQLException e) {
            e.printStackTrace(); // Print stack trace for debugging
            System.err.println("Error executing SQL query: " + e.getMessage());
        }
    }
    
    
    
    // Method to handle selection and view profiles
    private void viewProfile() {
        int selectedRow = jTableLeaderboard.getSelectedRow();
        if (selectedRow != -1) { // If a row is selected
            // Retrieve player data from the selected row
            String username1 = jTableLeaderboard.getValueAt(selectedRow, 0).toString(); // Assuming username is in the first column
            System.out.println(username1);
            // Open a new JFrame or dialog to display the profile
            // Create and display the profile window for the selected player
            // You can pass the username to the profile window to load specific user data
            ProfileStudent profileStudent = new ProfileStudent();
            
            profileStudent.setUsername(username);
            profileStudent.setLeaderboardUsername(username1);
            boolean isCurrentUser = username.equals(username1);
            profileStudent.setInboxVisibility(username, isCurrentUser);
            profileStudent.setFriendshipStatusVisibility(username, isCurrentUser);
            profileStudent.updateFriendshipStatusLabel(username, username1);
            profileStudent.setVisible(true);
            profileStudent.pack();
            profileStudent.setLocationRelativeTo(null);
        } else {
            // Inform the user to select a row
            JOptionPane.showMessageDialog(this, "Please select a player from the leaderboard to view their profile.");
        }
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLeaderboard = new javax.swing.JTable();
        jLabelLeaderboard = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(850, 550));
        jPanel1.setLayout(null);

        jTableLeaderboard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Username", "Points ", "Points Last Updated"
            }
        ));
        jTableLeaderboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLeaderboardMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableLeaderboard);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(70, 110, 700, 380);

        jLabelLeaderboard.setBackground(new java.awt.Color(255, 255, 255));
        jLabelLeaderboard.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabelLeaderboard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelLeaderboard.setText("Leaderboard");
        jLabelLeaderboard.setToolTipText("");
        jPanel1.add(jLabelLeaderboard);
        jLabelLeaderboard.setBounds(140, 40, 590, 70);

        backButton.setBackground(new java.awt.Color(255, 153, 153));
        backButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backButton);
        backButton.setBounds(20, 20, 72, 22);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\FOP\\Netbeans Project\\HackingTheFuture1\\HackingTheFuture\\HackingTheFuture\\src\\hackingthefuture\\Image\\back1.jpg")); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 910, 570);

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\FOP\\Netbeans Project\\HackingTheFuture1\\HackingTheFuture\\HackingTheFuture\\src\\hackingthefuture\\Image\\back1.jpg")); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 0, 850, 550);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableLeaderboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLeaderboardMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) { // Double-click action (you can change this based on your requirement)
            viewProfile(); // View profile on double-click
        }
    }//GEN-LAST:event_jTableLeaderboardMouseClicked

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlobalLeaderboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlobalLeaderboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlobalLeaderboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlobalLeaderboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GlobalLeaderboard GlobalLeaderboardFrame = new GlobalLeaderboard();
                GlobalLeaderboardFrame.setVisible(true);
                GlobalLeaderboardFrame.pack();
                GlobalLeaderboardFrame.setLocationRelativeTo(null);
                GlobalLeaderboardFrame.takeInformation();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelLeaderboard;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableLeaderboard;
    // End of variables declaration//GEN-END:variables
}
